Project 4 -- 6502 Machine Code Generation

Overall Objective -- AST -> Opcodes

GenerateMachineCode
-> Byte Array Size 256 bytes
-> Accumulator
-> Register x
-> Register y
--> Instructions
-> Traverse AST
-> Translate to Opcodes
-> BackPatch
-> Fill Remaining Space

TableForTemps
-> Temporary Static Location 
-> Var Name
-> Address
--> Instructions
-> Address Lookup Given Var

TableForJumps
-> Jump Hex
-> Jump Distance

--> Read Code Stored from Top -> Down
--> After Code is Stack
--> Heap Stored Down -> Up


POSSIBLE FUTURE IMPLEMENTATION/ERROR
ERRORS Check for Currtemp/currJump overload
CHECK FOR STACK OVERFLOW/OVERWRITING!!
EXPR ON BOTH SIDES Expr boolop Expr

TODO ->

TEST EVERY POSSIBLE FUCKING CASE
